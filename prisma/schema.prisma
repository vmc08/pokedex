// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Stat {
  id        Int         @id @default(autoincrement())
  apiId     Int         @unique @map("api_id")
  name      String
  StatValue StatValue[]

  @@map("stat")
}

model Ability {
  id       Int       @id @default(autoincrement())
  apiId    Int       @unique @map("api_id")
  name     String
  effect   String
  pokemons Pokemon[]

  @@map("ability")
}

model Type {
  id         Int       @id @default(autoincrement())
  apiId      Int       @unique @map("api_id")
  name       String
  strengths  Type[]    @relation("TypeToType")
  weaknesses Type[]    @relation("TypeToType")
  pokemons   Pokemon[]

  @@map("type")
}

model Pokemon {
  id         Int         @id @default(autoincrement())
  apiId      Int         @unique @map("api_id")
  name       String
  height     Int
  weight     Int
  image      String?
  abilities  Ability[]
  types      Type[]
  statValues StatValue[]

  @@map("pokemon")
}

model StatValue {
  id        Int     @id @default(autoincrement())
  value     Int
  stat      Stat    @relation(fields: [statId], references: [id])
  statId    Int
  pokemon   Pokemon @relation(fields: [pokemonId], references: [id])
  pokemonId Int

  @@map("stat_value")
}

model User {
  id        Int      @id @default(autoincrement())
  firstName String   @map("first_name")
  lastName  String   @map("last_name")
  email     String   @unique
  password  String
  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @default(now()) @map(name: "updated_at")

  @@map(name: "users")
}

model Account {
  id                 Int       @id @default(autoincrement())
  compoundId         String    @unique @map(name: "compound_id")
  userId             Int       @map(name: "user_id")
  providerType       String    @map(name: "provider_type")
  providerId         String    @map(name: "provider_id")
  providerAccountId  String    @map(name: "provider_account_id")
  refreshToken       String?   @map(name: "refresh_token")
  accessToken        String?   @map(name: "access_token")
  accessTokenExpires DateTime? @map(name: "access_token_expires")
  createdAt          DateTime  @default(now()) @map(name: "created_at")
  updatedAt          DateTime  @default(now()) @map(name: "updated_at")

  @@index([providerAccountId], name: "providerAccountId")
  @@index([providerId], name: "providerId")
  @@index([userId], name: "userId")
  @@map(name: "accounts")
}

model Session {
  id           Int      @id @default(autoincrement())
  userId       Int      @map(name: "user_id")
  expires      DateTime
  sessionToken String   @unique @map(name: "session_token")
  accessToken  String   @unique @map(name: "access_token")
  createdAt    DateTime @default(now()) @map(name: "created_at")
  updatedAt    DateTime @default(now()) @map(name: "updated_at")

  @@map(name: "sessions")
}
